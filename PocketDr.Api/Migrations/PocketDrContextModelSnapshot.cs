// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PocketDr.Api.Repositories.PocketDr;

#nullable disable

namespace PocketDr.Api.Migrations
{
    [DbContext(typeof(PocketDrContext))]
    partial class PocketDrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PocketDr.Api.Repositories.PocketDr.Models.Chat", b =>
                {
                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid")
                        .HasColumnName("chatId");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdAt");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("userId");

                    b.HasKey("ChatId")
                        .HasName("Chat_pkey");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("PocketDr.Api.Repositories.PocketDr.Models.Message", b =>
                {
                    b.Property<Guid>("MessageId")
                        .HasColumnType("uuid")
                        .HasColumnName("messageId");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid")
                        .HasColumnName("chatId");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("createdAt");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("sender");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("text");

                    b.HasKey("MessageId")
                        .HasName("Message_pkey");

                    b.HasIndex(new[] { "ChatId" }, "IX_Message_chatId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("PocketDr.Api.Repositories.PocketDr.Models.Message", b =>
                {
                    b.HasOne("PocketDr.Api.Repositories.PocketDr.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .IsRequired()
                        .HasConstraintName("Message");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("PocketDr.Api.Repositories.PocketDr.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
